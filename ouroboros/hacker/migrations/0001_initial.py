# Generated by Django 2.2.2 on 2019-06-24 05:04

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Hacker',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, null=True, unique=True)),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into the admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('first_name', models.CharField(max_length=255, verbose_name='first name')),
                ('last_name', models.CharField(max_length=255, verbose_name='last name')),
                ('rsvp_deadline', models.DateTimeField(null=True)),
                ('cant_make_it', models.BooleanField(default=False)),
                ('checked_in', models.NullBooleanField()),
                ('checked_in_datetime', models.DateTimeField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Wave',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Rsvp',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, help_text='Provide any additional notes and/or comments in the text box provided', max_length=300)),
                ('date_rsvped', models.DateField(auto_now_add=True)),
                ('hacker', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('adult', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='Are you at least 18 or older?')),
                ('major', models.CharField(max_length=50, verbose_name="What's your major?")),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('NB', 'Non-binary'), ('NA', 'Prefer not to disclose')], max_length=2, verbose_name="What's your gender?")),
                ('race', multiselectfield.db.fields.MultiSelectField(choices=[('American Indian', 'American Indian or Alaskan Native'), ('Asian', 'Asian'), ('Black', 'Black or African-American'), ('Hispanic', 'Hispanic or Latino White'), ('Native Hawaiian', 'Native Hawaiian or other Pacific Islander'), ('White', 'White or Caucasian'), ('NA', 'Decline to self-identify')], max_length=41, verbose_name='What race do you identify with?')),
                ('classification', models.CharField(choices=[("Fr", "Freshman"), ("So", "Sophomore"), ("Jr", "Junior"), ("Sr", "Senior"), ("Ot", "Other")])),
                ('grad_year', models.IntegerField(choices=[("Fall 2019", "Fall 2019"), ("Spring 2020", "Spring 2020"), ("Fall 2020", "Fall 2020"), ("Spring 2021", "Spring 2021"), ("Fall 2021", "Fall 2021"), ("Spring 2022", "Spring 2022"), ("Fall 2022", "Fall 2022"), ("Spring 2023", "Spring 2023")], verbose_name='What is your anticipated graduation date?')),
                ('dietary_restrictions', multiselectfield.db.fields.MultiSelectField(blank=True, choices=[('Vegan', 'Vegan'), ('Vegetarian', 'Vegetarian'), ('Halal', 'Halal'), ('Kosher', 'Kosher'), ('Food Allergies', 'Food Allergies')], max_length=44, verbose_name='Do you have any dietary restrictions that we should know about?')),
                ('travel_reimbursement_required', models.BooleanField(default=False)),
                ('num_hackathons_attended', models.PositiveSmallIntegerField(default=0, verbose_name='How many hackathons have you attended?')),
                ('previous_attendant', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='Have you attended Howdy Hack before?')),
                ('tamu_student', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=True, verbose_name='Are you a Texas A&M student?')),
                ('shirt_size', models.CharField(choices=[('XS', 'XS'), ('S', 'S'), ('M', 'M'), ('L', 'L'), ('XL', 'XL'), ('XXL', 'XXL')], max_length=3, verbose_name='Shirt size?')),
                ('extra_links', models.CharField(max_length=200)),
                ('programming_joke', models.TextField(max_length=500)),
                ('unlimited_resource', models.TextField(max_length=500)),
                ('cool_prize', models.TextField(max_length=500)),
                ('notes', models.TextField(blank=True, help_text='Provide any additional notes and/or comments in the text box provided', max_length=300)),
                ('resume', models.FileField(upload_to='', verbose_name='Provide us a copy of your most recent resume so we can get you connected with companies.')),
                ('approved', models.NullBooleanField()),
                ('hacker', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('wave', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hacker.Wave')),
            ],
        ),
    ]
