# Generated by Django 2.2.10 on 2020-06-19 03:38

import application.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import multiselectfield.db.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
            ],
        ),
        migrations.CreateModel(
            name='Wave',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.DateTimeField()),
                ('end', models.DateTimeField()),
                ('num_days_to_rsvp', models.IntegerField()),
                ('is_walk_in_wave', models.BooleanField(default=False, verbose_name='Is this wave for walk-ins?')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('datetime_submitted', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(choices=[('P', 'Under Review'), ('R', 'Waitlisted'), ('A', 'Admitted'), ('C', 'Confirmed'), ('X', 'Declined'), ('I', 'Checked in'), ('E', 'Expired')], default='P', max_length=1)),
                ('first_name', models.CharField(max_length=100, verbose_name='first name')),
                ('last_name', models.CharField(max_length=100, verbose_name='last name')),
                ('extra_links', models.CharField(blank=True, max_length=300, verbose_name="Is there anything else you'd like us to look at while considering your application?")),
                ('question1', models.TextField(blank=True, max_length=500, verbose_name='What prize do you want to see at TD?')),
                ('question2', models.TextField(blank=True, max_length=500, verbose_name='What workshops do you want to see at TD?')),
                ('question3', models.TextField(blank=True, max_length=500, verbose_name='Have you taken any data science or CS related classes?')),
                ('question4', models.TextField(blank=True, max_length=500, verbose_name='Are you involved in any data science or CS related clubs on campus?')),
                ('question5', models.TextField(blank=True, max_length=500, verbose_name='Have you had any data science or CS related jobs/internships?')),
                ('question6', models.TextField(blank=True, max_length=500, verbose_name='What industry interests you the most?')),
                ('resume', models.FileField(help_text='Companies will use this resume to offer interviews for internships and full-time positions.', upload_to=application.models.uuid_generator, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf'])], verbose_name='Upload your resume (PDF only)')),
                ('github_link', models.URLField(blank=True, max_length=255, null=True, verbose_name='Your GitHub')),
                ('linkedin_link', models.URLField(blank=True, max_length=255, null=True, verbose_name='Your Linkedin')),
                ('personal_website_link', models.URLField(blank=True, max_length=255, null=True, verbose_name='Your Personal Website')),
                ('instagram_link', models.URLField(blank=True, max_length=255, null=True, verbose_name='Your Instagram')),
                ('devpost_link', models.URLField(blank=True, max_length=255, null=True, verbose_name='Your Devpost')),
                ('school_other', models.CharField(blank=True, max_length=255, null=True)),
                ('majors', models.TextField(default=None, max_length=500)),
                ('minors', models.TextField(default=None, max_length=500)),
                ('classification', models.CharField(choices=[('Fr', 'Freshman'), ('So', 'Sophomore'), ('Jr', 'Junior'), ('Sr', 'Senior'), ('Ma', "Master's Student"), ('PhD', 'PhD Student'), ('O', 'Other')], max_length=3, verbose_name='What classification are you?')),
                ('gender', models.CharField(choices=[('', '---------'), ('NA', 'Prefer not to answer'), ('M', 'Male'), ('F', 'Female'), ('NB', 'Non-binary'), ('X', 'Prefer to self-describe')], default='NA', max_length=2, verbose_name="What's your gender?")),
                ('gender_other', models.CharField(blank=True, max_length=255, null=True, verbose_name='Self-describe')),
                ('age', models.IntegerField(default=None, validators=[django.core.validators.MinValueValidator(10), django.core.validators.MaxValueValidator(100)], verbose_name="What's your age?")),
                ('race', multiselectfield.db.fields.MultiSelectField(choices=[('AI', 'American Indian or Alaskan Native'), ('AS', 'Asian'), ('BL', 'Black or African-American'), ('HI', 'Hispanic or Latino'), ('NH', 'Native Hawaiian or other Pacific Islander'), ('WH', 'White'), ('NA', 'Prefer not to answer'), ('O', 'Prefer to self-describe')], max_length=41, verbose_name='What race(s) do you identify with?')),
                ('race_other', models.CharField(blank=True, max_length=255, null=True, verbose_name='Self-describe')),
                ('referral', models.CharField(choices=[('email', 'University Email'), ('social', 'Facebook / Instagram'), ('friend', 'Friend'), ('MLH', 'MLH Website / Newsletter'), ('MSC', 'MSC Open House'), ('campus', 'Campus Marketing (ex. Flyers, Posters, Whiteboards, etc)'), ('website', 'TAMU Datathon Website'), ('other', 'Other')], max_length=10, verbose_name='How did you hear about TAMU Datathon?')),
                ('learner', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Learners will recieve priority access to learner classes, be assigned a dedicated mentor, and have access to learner specific challenges / prizes.', verbose_name='Would you like to apply to the learner track?')),
                ('volunteer', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='Would you be interested in volunteering / mentoring for part of the event?')),
                ('first_generation', models.BooleanField(default=False, verbose_name='I am a first generation college student.')),
                ('datascience_experience', models.CharField(default=None, max_length=2)),
                ('technology_experience', models.CharField(default=None, max_length=150)),
                ('grad_year', models.IntegerField(choices=[(2020, 2020), (2021, 2021), (2022, 2022), (2023, 2023), (2024, 2024)], verbose_name='What is your anticipated graduation year?')),
                ('num_hackathons_attended', models.CharField(choices=[('0', 'This will be my first!'), ('1-3', '1-3'), ('4-7', '4-7'), ('8-10', '8-10'), ('10+', '10+')], max_length=22, verbose_name='How many hackathons have you attended?')),
                ('agree_to_mlh_policies', models.BooleanField(choices=[(True, 'Agree')], default=None, help_text='Being an MLH event, we need participants to be familiar with the MLH Code of Conduct and the MLH Contest Terms and Conditions.')),
                ('agree_to_privacy', models.BooleanField(choices=[(True, 'Agree')], default=None, help_text='We need your authorization to share your application / registration information for event administration, ranking, MLH administration, pre and post-event informational e-mails, and occasional messages about hackathons, in-line with the MLH Privacy Policy.')),
                ('is_adult', models.BooleanField(choices=[(True, 'Agree')], default=None, help_text='Please note that freshmen under 18 must be accompanied by an adult or prove that they go to Texas A&M.', verbose_name='Please confirm you are 18 or older.')),
                ('shirt_size', models.CharField(choices=[('WXXS', "Women's XXS"), ('WXS', "Women's XS"), ('WS', "Women's S"), ('WM', "Women's M"), ('WL', "Women's L"), ('WXL', "Women's XL"), ('WXXL', "Women's XXL"), ('XXS', 'Unisex XXS'), ('XS', 'Unisex XS'), ('S', 'Unisex S'), ('M', 'Unisex M'), ('L', 'Unisex L'), ('XL', 'Unisex XL'), ('XXL', 'Unisex XXL')], max_length=4, verbose_name='What size shirt do you wear?')),
                ('physical_location', models.CharField(max_length=20, verbose_name='Where will you be participating from?')),
                ('confirmation_deadline', models.DateTimeField(blank=True, null=True)),
                ('school', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='application.School', verbose_name='What school do you go to?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('wave', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='application.Wave')),
            ],
        ),
    ]
